import cv2
import numpy as np
from PIL import Image

#Input image path from user.
file = input("Paste file path: ")


h  = int(input("height of the image in physical dimeninsions (um): "))
w  = int(input("width of the image in physical dimeninsions (um): "))



img = cv2.imread(file)
rows, cols = img.shape[:2]


im = Image.open(file)
x = im.size[0]
y = im.size[1]


#Defines different functions for denoising and sharpening.
def kernel():
    kernel_25 = np.ones((25, 25), np.float32) / 625.0
    output_kernel = cv2.filter2D(img, -1, kernel_25)
    cv2.imwrite("img.png", output_kernel)
def blur():
    output_blur = cv2.blur(img, (25, 25))
    cv2.imwrite("img.png", output_blur)
def box():
    output_box = cv2.boxFilter(img, -1, (5,5), normalize=False)
    cv2.imwrite("img.png", output_box)
def gaus():
    output_gaus = cv2.GaussianBlur(img, (5,5), 0)
    cv2.imwrite("img.png", output_gaus)
def med():
    output_med = cv2.medianBlur(img, 5)
    cv2.imwrite("img.png", output_med)
def bil():
    output_bil = cv2.bilateralFilter(img, 5,6,6)
    cv2.imwrite("img.png", output_bil)

gaussian_blur = cv2.GaussianBlur(img, (7,7), 2)

def sharp1():
    sharpened1 = cv2.addWeighted(img,1.5,gaussian_blur, -0.5,0)
    cv2.imwrite("img.png", sharpened1)

def sharp2():
    sharpened2 = cv2.addWeighted(img,3.5,gaussian_blur, -2.5,0)
    cv2.imwrite("img.png", sharpened2)

sharpened3 = cv2.addWeighted(img,7.5,gaussian_blur, -6.5,0)

def sharp3():
    cv2.imwrite("img.png", sharpened3)

def binary():
    image_color = cv2.imread("/Users/daisymaturo/Downloads/microvascularpython/img.png", cv2.IMREAD_GRAYSCALE)
    thres = 128
    img_bw = cv2.threshold(image_color, thres, 255, cv2.THRESH_BINARY)[1]
    cv2.imwrite("superficial_bw.png", img_bw)

def code():
    cv2.imwrite("sharpened3.png", sharpened3)
    
    supersharp = cv2.imread("/Users/daisymaturo/Downloads/microvascularpython/sharpened3.png")
    
    output_box = cv2.boxFilter(supersharp, -1, (5,5), normalize=False)

    cv2.imwrite("box_wo_blur.png", output_box)

    image_color = cv2.imread("/Users/daisymaturo/Downloads/microvascularpython/box_wo_blur.png", cv2.IMREAD_GRAYSCALE)
    thres = 225
    img_bw = cv2.threshold(image_color, thres, 255, cv2.THRESH_BINARY)[1]

    cv2.imshow("box, sharp bw", img_bw)
    cv2.imshow("original", img)

    cv2.waitKey(0)








#a is micro meter length for x, b is micro meter length for y, x is pixel length for x coord, y is pixel length for y coord

# we would want to get coordinates, not the user so this would need to be used likely inside another function such as the vessel diameter or cernterline

def get_Coord_Dimen_x( a, x):
   pixel_length_x = im.size[1]
   
   return (x/pixel_length_x) *a
   


def get_Coord_Dimen_y( b, y):
   pixel_length_y = im.size[0]
   return (y/pixel_length_y) * b
   
    

ab = get_Coord_Dimen_x( w, 6)
cd = get_Coord_Dimen_y( h,6)


code()


